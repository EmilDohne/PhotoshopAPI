name: Test

on:
  workflow_dispatch:
  push:
    branches:
     - dev
     - 57-add-support-for-adjustment-layers
  pull_request:
    branches:
     - master
  release:
    types:
      - published

env:
  BUILD_TYPE: Debug

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
           - name: Ubuntu GCC
             os: ubuntu-24.04
             compiler: gcc-13
             compilercxx: g++-13
             cflags: ""
             cxxflags: ""
           - name: Ubuntu Clang
             os: ubuntu-24.04
             compiler: clang
             cflags: "-fsanitize=address,leak,undefined"
             cxxflags: "-fsanitize=address,leak,undefined"
             compilercxx: clang++
           - name: Windows MSVC
             os: windows-latest
             compiler: msvc
             compilercxx: msvc
             cflags: ""
             cxxflags: ""
           - name: MacOS ARM GCC
             os: macos-latest
             compiler: gcc-13
             compilercxx: g++-13
             cflags: ""
             cxxflags: ""

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Load or restore vcpkg libraries
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgDirectory: '${{ github.workspace }}/thirdparty/vcpkg'
  
    - name: Configure CMake ${{ matrix.os }}-${{ matrix.compilercxx }}
      env:
        CC: ${{ matrix.compiler }}
        CXX: ${{ matrix.compilercxx }}
        CFLAGS: ${{ matrix.cflags }}
        CXXFLAGS: ${{ matrix.cxxflags }}
      run: |
        cmake -B ${{github.workspace}}/build -DCMAKE_OSX_ARCHITECTURES="arm64" -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DPSAPI_BUILD_DOCS=OFF -DPSAPI_BUILD_BENCHMARKS=OFF -DPSAPI_BUILD_EXAMPLES=OFF -DPSAPI_BUILD_PYTHON=OFF

    - name: Build ${{ matrix.os }}-${{ matrix.compilercxx }}
      env:
        CC: ${{ matrix.compiler }}
        CXX: ${{ matrix.compilercxx }}
        CFLAGS: ${{ matrix.cflags }}
        CXXFLAGS: ${{ matrix.cxxflags }}
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    # On windows we need to copy the test files differently as it generates sub-folders
    # for the copied test files
    - name: Copy Testfiles on Windows
      if: runner.os == 'Windows'
      working-directory: ${{github.workspace}}/build/PhotoshopTest
      run: xcopy ".\\${{env.BUILD_TYPE}}\\documents" ".\\documents" /E /I

    - name: Test  ${{ matrix.os }}-${{ matrix.compilercxx }}
      working-directory: ${{github.workspace}}/build/PhotoshopTest
      run: ctest -C ${{env.BUILD_TYPE}} --extra-verbose --stop-on-failure --output-on-failure