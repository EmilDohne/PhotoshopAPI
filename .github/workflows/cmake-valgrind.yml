name: Valgrind

on:
  workflow_dispatch:
  push:
    branches:
     - dev
     - 57-add-support-for-adjustment-layers
  pull_request:
    branches:
     - master
  release:
    types:
      - published

env:
  BUILD_TYPE: Debug

jobs:
  valgrind:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
           - name: Ubuntu GCC
             os: ubuntu-24.04
             compiler: gcc-13
             compilercxx: g++-13
             cflags: "-fsanitize=address,leak,undefined"
             cxxflags: "-fsanitize=address,leak,undefined"
           - name: Ubuntu Clang
             os: ubuntu-24.04
             compiler: clang
             compilercxx: clang++
             cflags: "-fsanitize=address,leak,undefined"
             cxxflags: "-fsanitize=address,leak,undefined"

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
        fetch-depth: 0

    - name: Load or restore vcpkg libraries
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgDirectory: '${{ github.workspace }}/thirdparty/vcpkg'

    - name: Configure CMake ${{ matrix.os }}-${{ matrix.compilercxx }}
      env:
        CC: ${{ matrix.compiler }}
        CXX: ${{ matrix.compilercxx }}
        CFLAGS: ${{ matrix.cflags }}
        CXXFLAGS: ${{ matrix.cxxflags }}
      run: |
        cmake -B ${{github.workspace}}/build -DCMAKE_OSX_ARCHITECTURES="arm64" -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DPSAPI_BUILD_DOCS=OFF -DPSAPI_BUILD_BENCHMARKS=OFF -DPSAPI_BUILD_EXAMPLES=ON -DPSAPI_BUILD_PYTHON=OFF

    - name: Build ${{ matrix.os }}-${{ matrix.compilercxx }}
      env:
        CC: ${{ matrix.compiler }}
        CXX: ${{ matrix.compilercxx }}
        CFLAGS: ${{ matrix.cflags }}
        CXXFLAGS: ${{ matrix.cxxflags }}
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --parallel $(nproc || echo $NUMBER_OF_PROCESSORS)
      
    - name: Run Valgrind
      if: matrix.os == 'ubuntu-24.04'
      working-directory: ${{github.workspace}}/build/PhotoshopTest
      run: |
        sudo apt-get update
        sudo apt-get install -y valgrind
        valgrind --leak-check=full --show-leak-kinds=all ./PhotoshopTest
      continue-on-error: false