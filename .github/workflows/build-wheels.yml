# Build wheels and publish them to PyPi (for the master branch)
name: Python Wheels

on:
  workflow_dispatch:
  push:
    branches:
     - dev
  pull_request:
    branches:
     - master
  release:
    types:
      - published

jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Build SDist
      run: pipx run build --sdist

    - name: Check metadata
      run: pipx run twine check dist/*

    - uses: actions/upload-artifact@v4
      with:
        name: PhotoshopAPI_Py
        path: dist/*.tar.gz


  build_wheels:
    name: Wheels on ${{ matrix.os_dist.os }}-${{ matrix.os_dist.dist }}
    runs-on: ${{ matrix.os_dist.os }}
    strategy:
      fail-fast: false
      matrix:
         os_dist: [
          {os: ubuntu-latest, dist: cp37-manylinux_x86_64},
          {os: ubuntu-latest, dist: cp38-manylinux_x86_64},
          {os: ubuntu-latest, dist: cp39-manylinux_x86_64},
          {os: ubuntu-latest, dist: cp310-manylinux_x86_64},
          {os: ubuntu-latest, dist: cp311-manylinux_x86_64},
          {os: ubuntu-latest, dist: cp312-manylinux_x86_64},

          {os: windows-latest, dist: cp37-win_amd64},
          {os: windows-latest, dist: cp38-win_amd64},
          {os: windows-latest, dist: cp39-win_amd64},
          {os: windows-latest, dist: cp310-win_amd64},
          {os: windows-latest, dist: cp311-win_amd64},
          {os: windows-latest, dist: cp312-win_amd64},

          {os: macos-latest, dist: cp310-macosx_arm64},
          {os: macos-latest, dist: cp311-macosx_arm64},
          {os: macos-latest, dist: cp312-macosx_arm64}
          ]

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    # We need to specify Xcode15.3 here as the default for macos-14 runners is 15.01 which has a bug 
    # causing linking to fail.
    - name: Setup Xcode 15.3
      if: matrix.os == 'macos-latest'
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.3'

    - uses: pypa/cibuildwheel@v2.16
      env:
        CC: gcc-13
        CXX: g++-13
        CIBW_ARCHS: auto64
        CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_28
        CIBW_BUILD: "${{ matrix.os_dist.dist }}"
        # Test not only by running the test suite but also by executing every example we provide. This is to ensure
        # our examples are working and users can rely on them for starting off points
        CIBW_TEST_COMMAND: >
            python -m pip install -r {project}/python/psapi-test/requirements.txt &&
            python -u {project}/PhotoshopExamples/AddLayerMasks/add_layer_masks.py &&
            python -u {project}/PhotoshopExamples/CreateGroups/create_groups.py &&
            python -u {project}/PhotoshopExamples/CreateSimpleDocument/create_simple_document.py &&
            python -u {project}/PhotoshopExamples/ExtractImageData/extract_image_data.py &&
            python -u {project}/PhotoshopExamples/ModifyLayerStructure/modify_layer_structure.py &&
            python -u {project}/PhotoshopExamples/ReplaceImageData/replace_image_data.py &&
            python -u {project}/PhotoshopExamples/RescaleCanvas/rescale_canvas.py &&
            nosetests {project}/python/psapi-test --verbose

    - name: Verify clean directory
      run: git diff --exit-code
      shell: bash

    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        name: PhotoshopAPI_Py
        path: wheelhouse/*.whl


  pypi-publish:
    name: Upload release to PyPI
    permissions:
      id-token: write
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
    - uses: actions/setup-python@v5
      with:
        python-version: "3.x"

    - uses: actions/download-artifact@v4.1.7
      with:
        name: PhotoshopAPI_Py
        path: dist

    - uses: pypa/gh-action-pypi-publish@release/v1