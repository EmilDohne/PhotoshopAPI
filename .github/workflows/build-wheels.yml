# Build wheels and publish them to PyPi (for the master branch)
name: Python Wheels

on:
  workflow_dispatch:
  push:
    branches:
     - dev
  pull_request:
    branches:
     - master
  release:
    types:
      - published

jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Build SDist
      run: pipx run build --sdist

    - name: Check metadata
      run: pipx run twine check dist/*

    - uses: actions/upload-artifact@v4
      with:
        name: PhotoshopAPI_Py-srcdist
        path: dist/*.tar.gz


  build_wheels:
    name: Wheels on ${{ matrix.os_dist.os }}-${{ matrix.os_dist.dist }}
    runs-on: ${{ matrix.os_dist.os }}
    strategy:
      fail-fast: false
      matrix:
         os_dist: [
          {os: ubuntu-latest, dist: cp38-manylinux_x86_64},
          {os: ubuntu-latest, dist: cp39-manylinux_x86_64},
          {os: ubuntu-latest, dist: cp310-manylinux_x86_64},
          {os: ubuntu-latest, dist: cp311-manylinux_x86_64},
          {os: ubuntu-latest, dist: cp312-manylinux_x86_64},
          {os: ubuntu-latest, dist: cp313-manylinux_x86_64},
          
          {os: windows-latest, dist: cp38-win_amd64},
          {os: windows-latest, dist: cp39-win_amd64},
          {os: windows-latest, dist: cp310-win_amd64},
          {os: windows-latest, dist: cp311-win_amd64},
          {os: windows-latest, dist: cp312-win_amd64},
          {os: windows-latest, dist: cp313-win_amd64},

          {os: macos-latest, dist: cp310-macosx_arm64},
          {os: macos-latest, dist: cp311-macosx_arm64},
          {os: macos-latest, dist: cp312-macosx_arm64},
          {os: macos-latest, dist: cp313-macosx_arm64}
          ]

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
        fetch-depth: 0

    # Further brew packages needed to run/install vcpkg dependencies
    - name: Setup macos dependencies
      if: matrix.os_dist.os == 'macos-latest'
      run: |
          brew install ninja
          brew install autoconf
          brew install libtool
          brew install automake
      

    - name: Initialize vcpkg
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgDirectory: '${{ github.workspace }}/thirdparty/vcpkg'

    - uses: pypa/cibuildwheel@v2.23.1
      env:
        CC: gcc-13
        CXX: g++-13
        CIBW_ARCHS: auto64
        MACOSX_DEPLOYMENT_TARGET: 14.0
        CIBW_BUILD: "${{ matrix.os_dist.dist }}"
        # Test not only by running the test suite but also by executing every example we provide. This is to ensure
        # our examples are working and users can rely on them for starting off points

    - name: Verify clean directory
      run: git diff --exit-code
      shell: bash

    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        name: photoshopapi-${{ matrix.os_dist.os }}-${{ matrix.os_dist.dist }}
        path: wheelhouse/*.whl
        
  # Step to check if we can fetch the artifacts and they all come as expected, primarily a debugging
  # sanity step
  mock-publish:
    name: Mock Upload release to PyPI
    permissions:
      id-token: write
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/setup-python@v5
      with:
        python-version: "3.x"

    - uses: actions/download-artifact@v4
      with:
        path: photoshopapi
        pattern: photoshopapi-*
        merge-multiple: true
    - run: ls -R photoshopapi


  pypi-publish:
    name: Upload release to PyPI
    permissions:
      id-token: write
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
    - uses: actions/setup-python@v5
      with:
        python-version: "3.x"

    - uses: actions/download-artifact@v4
      with:
        path: dist
        pattern: photoshopapi-*
        merge-multiple: true

    - uses: pypa/gh-action-pypi-publish@release/v1